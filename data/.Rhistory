keep <- c("Country", "Edu2.FM", "Labo.FM", "Life.Exp", "Edu.Exp", "GNI", "Mat.Mor", "Ado.Birth", "Parli.F")
human <- select(human, one_of(keep))
# Removing all rows with missing values
complete.cases(human)
data.frame(human[-1], comp = complete.cases(human))
human_ <- filter(human, complete.cases(human))
# Removing the observations which relate to regions instead of countries
human_$Country
human_ <- human_[1:155, ]
human_$Country
# Defining the row names of the data by the country names
rownames(human_) <- human_$Country
# Removing the country name column from the data
human_ <- select(human_, -Country)
str(human_)
View(human_)
?rnorm
table(rpois(280,(7/10)))
table(rpois(280,(7/10)))
table(rpois(280,(7/10)))
sum(rpois(280,(7/10)))
sum(rpois(280,(7/10)))
280*(7/10)
sum(rpois(280,(7/10)))
sum(rpois(280,(7/10)))
table(rpois(280,(7/10)))
table(rpois(28000,(7/10)))
table(rpois(2800000,(7/10)))
table(rpois(28000000,(7/10)))
setwd("~/GitHub/IODS-final/data")
setwd("~/GitHub/IODS-final/data")
math <- read.csv("student-mat.csv", sep = ";")
str(math)
dim(math)
por <- read.csv("student-por.csv", sep = ";")
str(por)
dim(por)
rm(list=ls())
setwd("~/GitHub/IODS-final/data")
math <- read.csv("student-mat.csv", sep = ";")
str(math)
dim(math)
por <- read.csv("student-por.csv", sep = ";")
str(por)
dim(por)
rownames(math)
colnames(math)
colnames(por)
length(colnames(por))
length(colnames(math))
str(math)
str(por)
mean(math$age)
mean(por$age)
library(dplyr)
colnames(por)
mean(math$age)
mean(por$age)
#Lauri-Pekka Aho
#10.2.2017
#Data wrangling of UCI Machine Learning Repository, Student Alcohol consumption data
setwd("~/IODS/IODS-project/data")
math <- read.csv("student-mat.csv", sep = ";")
str(math)
dim(math)
por <- read.csv("student-por.csv", sep = ";")
str(por)
dim(por)
install.packages("dplyr")
library(dplyr)
join_by <- c("school","sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob","reason","nursery","internet")
math_por <- inner_join(math, por, by = join_by, suffix=c(".math", ".por"))
str(math_por)
dim(math_por)
alc <- select(math_por, one_of(join_by))
notjoined_columns <- colnames(math)[!colnames(math) %in% join_by]
notjoined_columns
for(column_name in notjoined_columns) {
two_columns <- select(math_por, starts_with(column_name))
first_column <- select(two_columns, 1)[[1]]
if(is.numeric(first_column)) {
alc[column_name] <- round(rowMeans(two_columns))
} else {
alc[column_name] <- select(two_columns, 1)[[1]]
}
}
alc <- mutate(alc, alc_use = (Dalc + Walc) / 2)
alc <- mutate(alc, high_use = (alc_use > 2))
glimpse(alc)
write.csv(alc, "alc.csv")
install.packages("dplyr")
View(math_por)
# Lauri-Pekka Aho
# 6.3.2017
# lauri-pekka.aho@helsinki.fi
setwd("~/GitHub/IODS-final/data")
# Reading both datasets and exploring the dimensions and structures of these datasets
math <- read.csv("student-mat.csv", sep = ";")
str(math)
dim(math)
por <- read.csv("student-por.csv", sep = ";")
str(por)
dim(por)
# Access the dplyr-package
library(dplyr)
# Selecting the columns to use as identifiers
join_by <- c("school","sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob","reason","nursery","internet")
# Joining the two datasets using selected columns
math_por <- inner_join(math, por, by = join_by, suffix=c(".math", ".por"))
# Lauri-Pekka Aho
# 6.3.2017
# lauri-pekka.aho@helsinki.fi
setwd("~/GitHub/IODS-final/data")
# Reading both datasets and exploring the dimensions and structures of these datasets
math <- read.csv("student-mat.csv", sep = ";")
str(math)
dim(math)
por <- read.csv("student-por.csv", sep = ";")
str(por)
dim(por)
# Access the dplyr-package
library(dplyr)
# Selecting the columns to use as identifiers
join_by <- c("school","sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob","reason","nursery","internet")
# Joining the two datasets using selected columns
math_por <- inner_join(math, por, by = join_by)
str(math_por)
dim(math_por)
# Lauri-Pekka Aho
# 6.3.2017
# lauri-pekka.aho@helsinki.fi
setwd("~/GitHub/IODS-final/data")
# Reading both datasets and exploring the dimensions and structures of these datasets
math <- read.csv("student-mat.csv", sep = ";")
str(math)
dim(math)
por <- read.csv("student-por.csv", sep = ";")
str(por)
dim(por)
# Access the dplyr-package
library(dplyr)
# Selecting the columns to use as identifiers
join_by <- c("school","sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob","reason","nursery","internet")
# Joining the two datasets using selected columns
math_por <- inner_join(math, por, by = join_by, suffix=c(".math", ".por"))
str(math_por)
dim(math_por)
# Creating a new data with only the joined columns
alc <- select(math_por, one_of(join_by))
# Selecting the columns which were not used for joining the data
notjoined_columns <- colnames(math)[!colnames(math) %in% join_by]
# Combining "duplicate" answers
# For every column name not used for joining...
for(column_name in notjoined_columns) {
# Select two columns from 'math_por' with the same original name
two_columns <- select(math_por, starts_with(column_name))
# Select the first column vector of those two columns
first_column <- select(two_columns, 1)[[1]]
# If that first column vector is numeric...
if(is.numeric(first_column)) {
# Take a rounded average of each row of the two columns and
# Add the resulting vector to the alc data frame
alc[column_name] <- round(rowMeans(two_columns))
} else { # Else if it's not numeric...
# Add the first column vector to the alc data frame
alc[column_name] <- select(two_columns, 1)[[1]]
}
}
# Define a new column alc_use by combining weekday and weekend alcohol use
alc <- mutate(alc, alc_use = (Dalc + Walc) / 2)
# Define a new logical column 'high_use'
alc <- mutate(alc, high_use = (alc_use > 2))
glimpse(alc)
write.csv(alc, "alc.csv")
glimpse(alc)
alc <- mutate(alc, parent_high = (Medu == 4 & Fedu == 4))
View(alc)
alc <- mutate(alc, parent_home = (Mjob == "at_home" & Fjob == "at_home"))
View(alc)
str(math)
alc <- read.csv("alc.csv")
setwd("~/GitHub/IODS-final/data")
alc <- read.csv("alc.csv")
str(alc)
dim(alc)
setwd("~/GitHub/IODS-final/data")
alc <- read.csv("alc.csv")
dim(alc)
View(alc)
# Lauri-Pekka Aho
# 6.3.2017
# lauri-pekka.aho@helsinki.fi
setwd("~/GitHub/IODS-final/data")
# Reading both datasets and exploring the dimensions and structures of these datasets
math <- read.csv("student-mat.csv", sep = ";")
str(math)
dim(math)
por <- read.csv("student-por.csv", sep = ";")
str(por)
dim(por)
# Access the dplyr-package
library(dplyr)
# Selecting the columns to use as identifiers
join_by <- c("school","sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob","reason","nursery","internet")
# Joining the two datasets using selected columns
math_por <- inner_join(math, por, by = join_by, suffix=c(".math", ".por"))
str(math_por)
dim(math_por)
# Creating a new data with only the joined columns
alc <- select(math_por, one_of(join_by))
# Selecting the columns which were not used for joining the data
notjoined_columns <- colnames(math)[!colnames(math) %in% join_by]
# Combining "duplicate" answers
# For every column name not used for joining...
for(column_name in notjoined_columns) {
# Select two columns from 'math_por' with the same original name
two_columns <- select(math_por, starts_with(column_name))
# Select the first column vector of those two columns
first_column <- select(two_columns, 1)[[1]]
# If that first column vector is numeric...
if(is.numeric(first_column)) {
# Take a rounded average of each row of the two columns and
# Add the resulting vector to the alc data frame
alc[column_name] <- round(rowMeans(two_columns))
} else { # Else if it's not numeric...
# Add the first column vector to the alc data frame
alc[column_name] <- select(two_columns, 1)[[1]]
}
}
# Define a new column alc_use by combining weekday and weekend alcohol use
alc <- mutate(alc, alc_use = (Dalc + Walc) / 2)
# Define a new logical column 'high_use'
alc <- mutate(alc, high_use = (alc_use > 2))
###################################
# The following are new changes
###################################
# Creating a new logical column 'parent_highEDU' which tells if both parents have
# at least education level of secondary education
alc <- mutate(alc, parent_highEDU = (Medu > 2 & Fedu > 2))
# Logical column 'parent_home"; both parents work at home.
alc <- mutate(alc, parent_home = (Mjob == "at_home" & Fjob == "at_home"))
# Glimpse at the newly created alc-data
glimpse(alc)
# Saving the file
write.csv(alc, "alc.csv")
View(alc)
dim(alc)
str(alc)
summary(alc)
#Let's take a look at the dimensions first
dim(alc)
#Structure
str(alc)
#And finally a summary
summary(alc)
#Structure
str(alc)
class(alc$age)
glimpse(alc)
ggplot(alc,x=alc_use, y=G3)
setwd("~/GitHub/IODS-final/data")
alc <- read.csv("alc.csv")
library(ggplot2)
library(dplyr)
library(GGally)
library(tidyr)
ggplot(alc,x=alc_use, y=G3)
ggplot(alc,aes(x=alc_use, y=G3))
ggplot(alc,aes(x=alc_use, y=G3)) + geom_point()
setwd("~/GitHub/IODS-final/data")
alc <- read.csv("alc.csv")
alc <- alc[,2:38]
library(ggplot2)
library(dplyr)
library(GGally)
library(tidyr)
View(alc)
View(alc)
alc2 <- alc[variables]
# Selecting the variables that relate to our research question
variables <- c("sex", "age", "famsize", "failures", "famrel", "dalc", "walc","health","G3","alc_use", "high_use","parent_highEDU", "parent_home")
alc2 <- alc[variables]
# Selecting the variables that relate to our research question
variables <- c("sex", "age", "famsize", "failures", "famrel", "dalc", "walc","health","G3","alc_use", "high_use","parent_highEDU", "parent_home")
alc2 <- alc[,variables]
# Selecting the variables that relate to our research question
variables <- c("sex", "age", "famsize", "failures", "famrel", "dalc", "walc","health","G3","alc_use", "high_use","parent_highEDU", "parent_home")
alc2 <- alc[variables,]
View(alc2)
alc2 <- select(alc, one_of(variables))
# Selecting the variables that relate to our research question
variables <- c("sex", "age", "famsize", "failures", "famrel", "Dalc", "Walc","health","G3","alc_use", "high_use","parent_highEDU", "parent_home")
alc2 <- select(alc, one_of(variables))
View(alc2)
p <- ggpairs(alc2, mapping = aes(alpha = 0.5), lower = list(combo = wrap("facethist", bins = 20)))
p1 <- p + ggtitle("")
p1
p <- ggpairs(alc2, mapping = aes(alpha = 0.5))
p1 <- p + ggtitle("Testi")
p1
ggpairs(alc2)
# Selecting the variables that relate to our research question
variables <- c("sex", "age", "famsize", "failures", "famrel", "Dalc", "Walc","health","G3","alc_use", "high_use","parent_highEDU", "parent_home")
alc2 <- select(alc, one_of(variables))
ggpairs(alc2)
?ggpairs
install.packages("corrplot")
# Selecting the variables that relate to our research question
variables <- c("age", "famsize", "failures", "famrel", "Dalc", "Walc","health","G3","alc_use", "high_use","parent_highEDU", "parent_home")
alc2 <- select(alc, one_of(variables))
ggpairs(alc2)
# Selecting the variables that relate to our research question
variables <- c("age")
alc2 <- select(alc, one_of(variables))
ggpairs(alc2)
str(alc)
# Selecting the variables that relate to our research question
variables <- c("age", "famsize", "failures", "famrel", "Dalc", "Walc","health","G3","alc_use", "high_use","parent_highEDU")
alc2 <- select(alc, one_of(variables))
ggpairs(alc2)
str(alc2)
# Selecting the variables that relate to our research question
variables <- c("age", , "failures", "famrel", "Dalc", "Walc","health","G3","alc_use", "high_use","parent_highEDU", "parent_home")
# Selecting the variables that relate to our research question
variables <- c("age", "failures", "famrel", "Dalc", "Walc","health","G3","alc_use", "high_use","parent_highEDU", "parent_home")
alc2 <- select(alc, one_of(variables))
ggpairs(alc2)
# Selecting the variables that relate to our research question
variables <- c("sex", "age", "failures", "famrel", "Dalc", "Walc","health","G3","alc_use", "high_use","parent_highEDU", "parent_home")
alc2 <- select(alc, one_of(variables))
ggpairs(alc2)
# Selecting the variables that relate to our research question
variables <- c("age", "failures", "famrel", "Dalc", "Walc","health","G3","alc_use", "high_use","parent_highEDU", "parent_home")
alc2 <- select(alc, one_of(variables))
ggpairs(alc2)
# Selecting the variables that relate to our research question
variables <- c("age", "failures", "famrel", "Dalc", "Walc","health","G3","alc_use", "high_use","parent_highEDU", "parent_home")
alc2 <- select(alc, one_of(variables))
ggpairs(alc2) + ggtitle("Correlations and distributions")
corrplot(cor(alc2), method="circle", type="upper", cl.pos="b", tl.pos="d",tl.cex=0.6)
setwd("~/GitHub/IODS-final/data")
alc <- read.csv("alc.csv")
alc <- alc[,2:38]
library(ggplot2)
library(dplyr)
library(GGally)
library(tidyr)
library(corrplot)
# Selecting the variables that relate to our research question
variables <- c("age", "failures", "famrel","health","G3","alc_use","parent_highEDU", "parent_home")
alc2 <- select(alc, one_of(variables))
ggpairs(alc2) + ggtitle("Correlations and distributions")
corrplot(cor(alc2), method="circle", type="upper", cl.pos="b", tl.pos="d",tl.cex=0.6)
# Selecting the variables that relate to our research question
variables <- c("age", "failures", "famrel","health","G3","alc_use","parent_highEDU", "parent_home")
alc2 <- select(alc, one_of(variables))
ggpairs(alc2) + ggtitle("Correlations and distributions")
corrplot(cor(alc2), type="upper", cl.pos="b", tl.pos="d",tl.cex=0.6)
?corrplot
# Selecting the variables that relate to our research question
variables <- c("age", "failures", "famrel","health","G3","alc_use","parent_highEDU", "parent_home")
alc2 <- select(alc, one_of(variables))
ggpairs(alc2) + ggtitle("Correlations and distributions")
corrplot(cor(alc2), method = "color" ,type="upper", cl.pos="b", tl.pos="d",tl.cex=0.6, order = "AOE")
plot(lm(G3 ~ .))
my_model <- lm(G3 ~ alc_use, data = alc2)
my_model <- lm(G3 ~ alc_use, data = alc2)
my_model
my_model <- lm(G3 ~ alc_use + famrel, data = alc2)
my_model
my_model <- lm(G3 ~ alc_use + famrel, data = alc2)
summary(my_model)
my_model <- lm(G3 ~ alc_use + famrel, data = alc2)
plot(my_model)
my_model <- lm(G3 ~ alc_use , data = alc2)
plot(my_model)
my_model <- lm(famrel ~ alc_use , data = alc2)
plot(my_model)
my_model <- lm(jitter(famrel) ~ alc_use , data = alc2)
plot(my_model)
my_model <- lm(jitter(famrel) ~ jitter(alc_use) , data = alc2)
plot(my_model)
my_model <- lm(jitter(famrel) ~ jitter(alc_use,10) , data = alc2)
plot(my_model)
my_model <- lm(jitter(famrel,10) ~ jitter(alc_use,10) , data = alc2)
plot(my_model)
my_model <- lm(jitter(famrel,10000) ~ jitter(alc_use,10000) , data = alc2)
plot(my_model)
my_model <- lm(jitter(famrel,2) ~ jitter(alc_use,2) , data = alc2)
plot(my_model)
plot(alc2$G3)
plot(alc2$G3+rnorm(length(alc2),sd=0.5))
plot(alc2$G3+rnorm(length(alc2$G3),sd=0.5))
plot(alc2$G3+rnorm(length(alc2$G3),sd=0.5))
plot(alc2$G3+rnorm(length(alc2$G3),sd=0.5))
plot(alc2$G3+rnorm(length(alc2$G3),sd=0.5))
boxplot(alc2$G3+rnorm(length(alc2$G3),sd=0.5))
boxplot(jitter(alc2$G3))
boxplot(jitter(alc2$G3))
boxplot(alc2$G3+rnorm(length(alc2$G3),sd=0.5))
boxplot(jitter(alc2$G3))
boxplot(alc2$G3+rnorm(length(alc2$G3),sd=0.5))
boxplot(jitter(alc2$G3))
plot(alc$G3)
plot(alc2$G3+rnorm(length(alc2$G3),sd=0.5))
plot(alc2$famrel+rnorm(length(alc2$G3),sd=0.5))
jitt_alc_use <- alc2$alc_use+rnorm(length(alc2$alc_use),sd=0.5)
jitt_famrel <- alc2$famrel+rnorm(length(alc2$famrel),sd=0.5)
my_model <- lm(jitt_famrel ~ jitt_alc_use)
plot(my_model)
jitt_famrel <- alc2$famrel+rnorm(length(alc2$famrel),sd=0.5)
jitt_alc_use <- alc2$alc_use+rnorm(length(alc2$alc_use),sd=0.5)
my_model <- lm(jitt_famrel ~ jitt_alc_use)
summary(my_model)
plot(jitt_famrel,jitt_alc_use)
jitt_famrel <- alc2$famrel+rnorm(length(alc2$famrel),sd=0.5)
jitt_alc_use <- alc2$alc_use+rnorm(length(alc2$alc_use),sd=0.5)
my_model <- lm(famrel ~ alc_use, data=alc2)
summary(my_model)
plot(jitt_famrel,jitt_alc_use)
plot(jitt_famrel,jitt_alc_use)
summary(my_model)
my_model
plot(jitt_famrel,jitt_alc_use)
?lines
?abline
plot(jitt_famrel,jitt_alc_use)
abline(a=4.1476, b=-0.1114)
lm(alc_use ~ famrel, data=alc2)
plot(jitt_famrel,jitt_alc_use)
abline(a=2.4075, b=-0.1317)
plot(jitt_alc_use,jitt_famrel)
abline(a=4.2075, b=-0.1317)
jitt_famrel <- alc2$famrel+rnorm(length(alc2$famrel),sd=0.5)
jitt_alc_use <- alc2$alc_use+rnorm(length(alc2$alc_use),sd=0.5)
jitt_G3 <- alc2$G3+rnorm(length(alc2$G3),sd=0.5)
my_model <- lm(famrel ~ alc_use, data=alc2)
plot(jitt_famrel,jitt_alc_use)
abline(my_model)
jitt_famrel <- alc2$famrel+rnorm(length(alc2$famrel),sd=0.5)
jitt_alc_use <- alc2$alc_use+rnorm(length(alc2$alc_use),sd=0.5)
jitt_G3 <- alc2$G3+rnorm(length(alc2$G3),sd=0.5)
my_model <- lm(famrel ~ alc_use, data=alc2)
plot(jitt_famrel,jitt_alc_use)
abline(my_model)
jitt_famrel <- alc2$famrel+rnorm(length(alc2$famrel),sd=0.5)
jitt_alc_use <- alc2$alc_use+rnorm(length(alc2$alc_use),sd=0.5)
jitt_G3 <- alc2$G3+rnorm(length(alc2$G3),sd=0.5)
my_model <- lm(famrel ~ alc_use, data=alc2)
plot(y=jitt_famrel,x=jitt_alc_use)
abline(my_model)
jitt_famrel <- alc2$famrel+rnorm(length(alc2$famrel),sd=0.5)
jitt_alc_use <- alc2$alc_use+rnorm(length(alc2$alc_use),sd=0.5)
jitt_G3 <- alc2$G3+rnorm(length(alc2$G3),sd=0.5)
my_model <- lm(famrel ~ alc_use, data=alc2)
plot(y=jitt_famrel,x=jitt_alc_use)
abline(my_model,col="red")
jitt_famrel <- alc2$famrel+rnorm(length(alc2$famrel),sd=0.5)
jitt_alc_use <- alc2$alc_use+rnorm(length(alc2$alc_use),sd=0.5)
jitt_G3 <- alc2$G3+rnorm(length(alc2$G3),sd=0.5)
my_model <- lm(famrel ~ alc_use, data=alc2)
summary(my_model)
plot(y=jitt_famrel,x=jitt_alc_use)
abline(my_model,col="red")
?abline
my_model <- lm(famrel ~ G3, data=alc2)
summary(my_model)
plot(y=jitt_famrel,x=G3)
my_model <- lm(famrel ~ G3, data=alc2)
summary(my_model)
plot(y=jitt_famrel,x=jitt_G3)
abline(my_model,col="red")
my_model <- lm(famrel ~ G3, data=alc2)
summary(my_model)
plot(y=jitt_famrel,x=jitt_G3)
my_model
abline(my_model,col="red")
summary(lm(sex ~age, data = alc))
summary(lm(as.numeric(sex) ~ age, data = alc))
summary(lm(age ~ as.numeric(sex), data = alc))
plot(age ~ as.numeric(sex), data = alc))
plot(age ~ as.numeric(sex), data = alc)
plot(age ~ jitter(as.numeric(sex)), data = alc)
plot(jitter(age,10) ~ jitter(as.numeric(sex)), data = alc)
plot(jitter(age,10) ~ jitter(as.numeric(sex),20), data = alc)
lm(jitter(age,10) ~ jitter(as.numeric(sex),20), data = alc)
summary(lm(jitter(age,10) ~ jitter(as.numeric(sex),20), data = alc))
summary(lm(jitter(age,50) ~ jitter(as.numeric(sex),20), data = alc))
summary(lm(jitter(age,50) ~ jitter(as.numeric(sex),200), data = alc))
summary(lm(jitter(age,50000) ~ jitter(as.numeric(sex),2), data = alc))
summary(lm(jitter(age,50000) ~ jitter(as.numeric(sex)), data = alc))
plot(jitter(age,50000) ~ jitter(as.numeric(sex)), data = alc)
lm(1 ~ 2)
lm(rep(1:1000) ~ rep(2:1000))
lm(rep(1:1000) ~ rep(1:1000))
summary(lm(rep(1:1000) ~ rep(1:1000)))
my_model <- lm(G3 ~ alc_use, data=alc2)
summary(my_model)
plot(x=jitt_famrel,y=jitt_alc_use)
abline(my_model,col="red")
my_model <- lm(G3 ~ alc_use, data=alc2)
summary(my_model)
plot(x=jitt_famrel,y=jitt_alc_use)
abline(my_model,col="red")
my_model <- lm(G3 ~ alc_use, data=alc2)
summary(my_model)
plot(x=jitt_G3,y=jitt_alc_use)
abline(my_model,col="red")
my_model <- lm(G3 ~ alc_use, data=alc2)
summary(my_model)
plot(y=jitt_G3,x=jitt_alc_use)
abline(my_model,col="red")
